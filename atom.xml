<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[LoveAria]]></title>
  <link href="http://lovearia.me/atom.xml" rel="self"/>
  <link href="http://lovearia.me/"/>
  <updated>2017-11-29T23:03:21+08:00</updated>
  <id>http://lovearia.me/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[近似解]]></title>
    <link href="http://lovearia.me/15121843071521.html"/>
    <updated>2017-12-02T11:11:47+08:00</updated>
    <id>http://lovearia.me/15121843071521.html</id>
    <content type="html"><![CDATA[
<p>在学校做数学题，题目我要求一个方程的根，所以我一定要求出来这个准确的值。我能求出来这个准确的数字就能得100分，不能求出来就是0分。如果准确答案是\( \sqrt{2} \)，哪怕我写 1.414 也是会给我0分。</p>

<p>这就是我们从小被培养出来的思维习惯，同时也被带到了以后现实的工作当中。然而在现实生活中，达到<strong>准确</strong>这两个字的难度是难以想象的高，所有的客观事物都会成为到达这个完美 \( \sqrt{2} \) 的阻碍。</p>

<p>但是，1.414 就没有意义了吗？那我们换一种问法，一个问题虽然不能完全解决，那解决到 90% 有没有意义？或者一个问题，我有 90% 的概率解决它这有没有意义。或者再具体一点，一个项目某一项开支我们希望省掉，但是我们没有办法完全省掉，只能省掉 90%。或者有一样新药可以治疗某一种疾病，但是只对 90% 的有效。那这样有没有意义呢？</p>

<p>这就是 1.414 所代表的意义。在达不到完美的时候，不完美同样的有意义的。在难以拿到准确解的时候，近似解一样是有效果的。</p>

<p>\([\sqrt{2} - 1.14, ]\)</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[原来在计算机里，确定性的计算，也那么难]]></title>
    <link href="http://lovearia.me/15118771887233.html"/>
    <updated>2017-11-28T21:53:08+08:00</updated>
    <id>http://lovearia.me/15118771887233.html</id>
    <content type="html"><![CDATA[
<p>最近我们在做一个 2D 多人对战游戏，为了节省流量带宽以及提高实时性，我们选择了用帧同步，并且只同步一帧中每个玩家的输入，让后由服务器、哥哥玩家手机分别计算。</p>

<p>同一套 c艹 代码写出来的引擎，同样的输入，又没有随机数，最后结果肯定是一毛一样的对不对？肯定是一样的吧？然而事与愿违，结果就是同一局游戏，大家一开都一样，但是玩着玩着大家就变成各玩各的了，每一个玩家看到的都是自己队友和对手都在疯狂旋转跳跃闭着眼，怼墙怼家怼队友。大家从一局游戏变成了各玩各的。很显然，问题出现了，出现在了本应该运算出一样结果的代码，为什么算着算着就不一样了？</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">坑爹的浮点数</h2>

<p>系统学过计算机知识的小伙伴，二进制和十进制在整数上互相转换是不会改变值的，这也意味着在计算机里面用二进制来存储十进制的数将会是准确无误的。但是小数呢？</p>

<p>在十进制 0.1 、 0.01 、 0.001 这些小数是什么意义呢？他们代表的是 十分之一 、 百分之一 、 千分之一。十进制的小数部分是由 \( \frac{1}{10^n} \) 的和组成的。同样的，那二进制的小数表示的则是 \( \frac{1}{2^n} \) 的和组成的数。这两种小数并没有办法做到一一对应，比如常见的 \( \frac{3}{10} \) 也就是 \( 0.3 \) 就没有办法很好的用有限位二进制数准确存储，也就诞生了 \( 0.3 - 0.1 \neq 0.2 \) 这种经典的坑。我们把用二进制存储十进制小数而丢失原来的精度称之为失精度。</p>

<p>失精度其实不可怕，可怕的是在不同的cpu、系统、编译器、甚至编译参数下，丢失的精度是不一样的。而我的处理方式是直接舍去一部分精度，将所有的数值转化成整型。</p>

<h2 id="toc_1">坑爹的弧度和三角函数</h2>

<p>圆是这个世界上最完美的图形了，然而隐藏在圆背后的 \( \pi \) 却真的让计算机爱不起来。我们前面刚说，有限位的二进制无法准确存储十进制的小数，那 \( \pi \) 这个东西连有限位的十进制都没办精确表示的无理数、超越数，更何况是二进制了。伴随着 \( \pi \) 而生的弧度也是个大坑。比如横平竖直的 \( \angle 90^\circ \) 都要表示成一个 \( \frac{\pi}{2} \) 这么一个东西，真是让人爱不起来。</p>

<p>我的解决方案是以 360° 作为角度计量，并且预先计算并且固定统一的三角函数表。</p>

<h2 id="toc_2">指针的的顺序</h2>

<p>在实际开发中，很多时候户需要用在 set 里面插入指针，或者把指针当成 map 的 key 来使用。但是这时候就会出现问题， set 和 key 都是有序的，指针默认会当成 size_t 类型来进行排序。但是问题是指针这个地址值使我们在程序里面不可控的，所以在遍历的时的顺序产生一些不一致。</p>

<p>我的解决方法是手动实现指针的比较算法，并且以指针指向对象的 id 进行排序，这样所有的 set / map 都能保证一致的遍历顺序。</p>

<h2 id="toc_3">后记</h2>

<p>通过努力，现在新的东西碰撞和运算已经在 arm / intel 下进行复杂的测试最终表现出一致的结果了。哎，采坑经历又丰富了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mweb 自动发布脚本]]></title>
    <link href="http://lovearia.me/15118019397838.html"/>
    <updated>2017-11-28T00:58:59+08:00</updated>
    <id>http://lovearia.me/15118019397838.html</id>
    <content type="html"><![CDATA[
<p>本博客是使用 Mweb 这个 markdown 文本编辑器自动生成的。Mweb 为了上架苹果 Apple Store，而限制了自动发布脚本的自运行。而只能做到打开 terminal，以及将发布脚本复制到剪贴板。</p>

<p>嗯……剪贴板，那我只需要通过 terminal 打开时 bash / zsh 的配置脚本来检测剪贴板，并且自动执行，那不就相当于自动一键发布了嘛！</p>

<span id="more"></span><!-- more -->

<p>记录一下自己折腾的黑科技：</p>

<pre><code class="language-Bash">
if (pbpaste  | grep -Eq  &#39;^cd &quot;[^&quot;]*&quot; &amp;&amp; sh &quot;[^&quot;]*/site_publish_logs/sh_\d*\.sh&quot; &amp;&amp; open &quot;[^&quot;]*&quot;&#39;) 
then
    echo &quot;========== MWEB AUTO PUBLISH START ==========&quot; 
    echo &quot;Runing command:&quot;
    pbpaste

    if pbpaste | sh
    then

        echo &quot;Success!&quot;
        echo &quot;Clean pasteboard...&quot;
        echo -n &quot;&quot; | pbcopy
        echo &quot;==========  MWEB AUTO PUBLISH END  ==========&quot;
        echo &quot;Close terminal 5s later...&quot;
        sleep 5
        exit

    else

        echo &quot;Failed!&quot;
        echo &quot;Clean pasteboard...&quot;
        echo -n &quot;&quot; | pbcopy
        echo &quot;==========  MWEB AUTO PUBLISH END  ==========&quot;

    fi

fi
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[博客又开了]]></title>
    <link href="http://lovearia.me/15116935172675.html"/>
    <updated>2017-11-26T18:51:57+08:00</updated>
    <id>http://lovearia.me/15116935172675.html</id>
    <content type="html"><![CDATA[
<p>博客又开了，只不过之前的内容都已经不在了。不想再折腾博客系统了，现在干脆就用现成的静态博客生成器就够了。好好歇歇文章记录记录心得体会啥的就够了。</p>

<p>不想在知乎上写的东西就在这里写着玩吧。</p>

]]></content>
  </entry>
  
</feed>
